// server.js - –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª Node.js –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
require('dotenv').config();

// --- –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π ---
const express = require('express');
const bodyParser = require('body-parser');
const fetch = require('node-fetch');
const { URL } = require('url');
const path = require('path');
const rateLimit = require('express-rate-limit');

// --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Express –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ---
const app = express();
const port = process.env.PORT || 3000;

// --- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è ---
const {
    BOT_TOKEN,
    CHAT_ID,
    RECAPTCHA_SECRET_KEY,
    ALLOWED_DOMAINS,
    MESSAGE_THREAD_ID,
} = process.env;

const RECAPTCHA_THRESHOLD = parseFloat(process.env.RECAPTCHA_THRESHOLD || '0.5');
const allowedDomainsList = ALLOWED_DOMAINS ? ALLOWED_DOMAINS.split(',').map(d => d.trim()) : ['av3d.by', 'www.av3d.by'];
if (process.env.NODE_ENV !== 'production') {
    allowedDomainsList.push('localhost');
}

// --- Middlewares (–ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ–µ –ü–û) ---

// 1. –ü–∞—Ä—Å–∏–Ω–≥ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞ (JSON –∏ URL-encoded)
app.use(express.json({ limit: '10mb' }));
app.use(express.urlencoded({ extended: true, limit: '10mb' }));

// 2. –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ (HTML, CSS, JS, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)
// –í—Å–µ —Ñ–∞–π–ª—ã –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã
app.use(express.static(path.join(__dirname)));

// 3. Rate Limiter: –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç –±—Ä—É—Ç—Ñ–æ—Ä—Å–∞
const apiLimiter = rateLimit({
    windowMs: 15 * 60 * 1000, // 15 –º–∏–Ω—É—Ç
    max: 20, // –ú–∞–∫—Å–∏–º—É–º 20 –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –æ–¥–Ω–æ–≥–æ IP –∑–∞ 15 –º–∏–Ω—É—Ç
    message: { success: false, message: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –≤–∞—à–µ–≥–æ IP. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.' },
    standardHeaders: true,
    legacyHeaders: false,
});

// 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ Referer –∏ Honeypot
const checkSecurity = (req, res, next) => {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ Referer (–∑–∞—â–∏—Ç–∞ –æ—Ç CSRF)
    const referer = req.headers.referer;
    let refererHostname = '';
    try {
        if (referer) {
            refererHostname = new URL(referer).hostname;
        }
    } catch (e) {
        console.warn('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π Referer:', referer);
    }

    if (!allowedDomainsList.includes(refererHostname)) {
        console.error(`–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω: –ù–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π referer '${refererHostname}'`);
        return res.status(403).json({ success: false, message: '–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω.' });
    }

    // Honeypot (–ª–æ–≤—É—à–∫–∞ –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –±–æ—Ç–æ–≤)
    if (req.body.website) {
        console.log('Honeypot —Å—Ä–∞–±–æ—Ç–∞–ª. –ó–∞—è–≤–∫–∞ –æ—Ç –±–æ—Ç–∞ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∞.');
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç, —á—Ç–æ–±—ã —Å–±–∏—Ç—å –±–æ—Ç–∞ —Å —Ç–æ–ª–∫—É
        return res.json({ success: true, message: '–í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!' });
    }

    next(); // –ï—Å–ª–∏ –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã, –ø–µ—Ä–µ–¥–∞–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–ª—å—à–µ
};

// --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∞–Ω–∏—Ç–∏–∑–∞—Ü–∏–∏ –≤–≤–æ–¥–∞ ---
const sanitize = (text) => {
    return text.replace(/</g, "&lt;").replace(/>/g, "&gt;");
};

// --- –û—Å–Ω–æ–≤–Ω–æ–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ä–º—ã ---
app.post('/includes/send-telegram', apiLimiter, checkSecurity, async (req, res, next) => {
    try {
        // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ reCAPTCHA
        const recaptchaResponse = req.body.recaptcha_response;
        if (!recaptchaResponse) {
            return res.status(400).json({ success: false, message: 'reCAPTCHA —Ç–æ–∫–µ–Ω –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω.' });
        }

        const recaptchaVerifyUrl = `https://www.google.com/recaptcha/api/siteverify?secret=${RECAPTCHA_SECRET_KEY}&response=${recaptchaResponse}&remoteip=${req.ip}`;
        const recaptchaResult = await fetch(recaptchaVerifyUrl, { method: 'POST' });
        const recaptchaJson = await recaptchaResult.json();

        if (!recaptchaJson.success || recaptchaJson.score < RECAPTCHA_THRESHOLD) {
            console.error('–ü—Ä–æ–≤–µ—Ä–∫–∞ reCAPTCHA –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞:', recaptchaJson);
            return res.status(400).json({ success: false, message: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–æ–±–æ—Ç–∞ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞.' });
        }

        // 2. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
        if (!BOT_TOKEN || !CHAT_ID) {
            console.error('–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: BOT_TOKEN –∏–ª–∏ CHAT_ID –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã.');
            return res.status(500).json({ success: false, message: '–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞.' });
        }

        // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏ —Å–∞–Ω–∏—Ç–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–æ—Ä–º—ã
        const name = sanitize(req.body.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ');
        const phone = sanitize(req.body.phone || '–ù–µ —É–∫–∞–∑–∞–Ω–æ');
        const email = sanitize(req.body.email || ''); // Email –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª–µ–Ω, –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –æ–∫
        const service = sanitize(req.body.service || '–ù–µ –≤—ã–±—Ä–∞–Ω–∞');
        const messageText = sanitize(req.body.message || '–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è');

        const telegramMessage = `
üìå *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞ AV3D*

üë§ *–ò–º—è:* \`${name}\`
üì± *–¢–µ–ª–µ—Ñ–æ–Ω:* \`${phone}\`
${email ? `üìß *Email:* \`${email}\`\n` : ''}
üîß *–£—Å–ª—É–≥–∞:* ${service}

‚úâÔ∏è *–°–æ–æ–±—â–µ–Ω–∏–µ:*
${messageText}
        `.trim();

        const telegramApiUrl = `https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`;
        const telegramData = {
            chat_id: CHAT_ID,
            text: telegramMessage,
            parse_mode: 'Markdown',
        };

        if (MESSAGE_THREAD_ID && !isNaN(parseInt(MESSAGE_THREAD_ID))) {
            telegramData.message_thread_id = parseInt(MESSAGE_THREAD_ID);
        }

        const telegramResponse = await fetch(telegramApiUrl, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(telegramData)
        });

        const telegramResult = await telegramResponse.json();

        if (telegramResult.ok) {
            console.log('–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram.');
            res.json({ success: true, message: '–í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!' });
        } else {
            console.error('–û—à–∏–±–∫–∞ Telegram API:', telegramResult);
            res.status(500).json({ success: false, message: '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.' });
        }

    } catch (error) {
        next(error); // –ü–µ—Ä–µ–¥–∞–µ–º –æ—à–∏–±–∫—É –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    }
});

// --- –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ ---
// –î–æ–ª–∂–µ–Ω –∏–¥—Ç–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–º –≤ —Ü–µ–ø–æ—á–∫–µ app.use
app.use((err, req, res, next) => {
    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', err);
    res.status(500).json({
        success: false,
        message: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ú—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —ç—Ç–∏–º.'
    });
});

// --- –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ ---
app.listen(port, () => {
    console.log(`–°–µ—Ä–≤–µ—Ä AV3D –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${port}`);
    console.log(`–î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Å–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:${port}`);
});